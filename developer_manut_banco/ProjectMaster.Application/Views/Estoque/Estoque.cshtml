@model ProjectMaster.Application.Models.EstoqueModels
@{
    var read_only = "";

    ViewBag.Title = "Cadastro de Entrada / Saida de Estoque";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";

    List<ProjectMaster.Core.ToolBarButton> Buttons = new List<ProjectMaster.Core.ToolBarButton>();

    string acao = string.Empty;

    if (ViewData["acao"] == null)
    {
        acao = "New";
    }

    if (ViewData["acao"] != null || ViewData["acao"] == "New")
    {
        acao = ViewData["acao"].ToString();
    }

    if (acao.Equals("New", StringComparison.OrdinalIgnoreCase))
    {
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.CadastrarNovo, "Cadastrar nova Entrada / Saida de Estoque.", "Cadastrar nova Entrada / Saida de Estoque", "cadastrar", "", Url.Content("~/Estoque/Estoque?acao=New"), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Editar, "Editar Entrada / Saida de Estoque.", "Editar Entrada / Saida de Estoque.", "editar", "", Url.Content("~/Estoque/Estoque?acao=Edit&id_produto_estoque_entrada=" + Model.id_produto_estoque_entrada), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Excluir, "Excluir Entrada / Saida de Estoque.", "Excluir Entrada / Saida de Estoque.", "excluir", "", Url.Content("~/Estoque/Estoque"), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Gravar, "Gravar Entrada / Saida de Estoque.", "Gravar Entrada / Saida de Estoque.", "gravar", "", "javascript:ShowLoad();$('#formulario_estoque').submit();", true, true));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Cancelar, "Cancelar ação.", "Cancelar ação.", "cancelar", "", Url.Content("~/Estoque/Estoque"), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Voltar, "Voltar.", "Voltar", "voltar", "", Url.Content("~/Estoque/Index"), true, true));
        read_only = "";
    }

    if (acao.Equals("Edit", StringComparison.OrdinalIgnoreCase))
    {
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.CadastrarNovo, "Cadastrar nova Entrada / Saida de Estoque.", "Cadastrar nova Entrada / Saida de Estoque.", "cadastrar", "", Url.Content("~/Estoque/Estoque?acao=New"), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Editar, "Editar Entrada / Saida de Estoque.", "Editar Entrada / Saida de Estoque.", "editar", "", Url.Content("~/Estoque/Estoque?acao=Edit&id_centro_de_custo=" + Model.id_produto_estoque_entrada), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Excluir, "Excluir Entrada / Saida de Estoque.", "Excluir Entrada / Saida de Estoque.", "excluir", "", "JavaScript:delete_file(" + Model.id_produto_estoque_entrada + ",'Estoque','form')", true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Gravar, "Gravar Entrada / Saida de Estoque.", "Gravar Entrada / Saida de Estoque.", "gravar", "", "javascript:ShowLoad();$('#formulario_estoque').submit();", true, true));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Cancelar, "Cancelar ação.", "Cancelar ação.", "cancelar", "", Url.Content("~/Estoque/Estoque?acao=View&id_produto_estoque_entrada=" + Model.id_produto_estoque_entrada), true, true));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Voltar, "Voltar.", "Voltar", "voltar", "", Url.Content("~/Estoque/Index"), true, true));
        read_only = "";
    }

    if (acao.Equals("View", StringComparison.OrdinalIgnoreCase))
    {
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.CadastrarNovo, "Cadastrar nova Entrada / Saida de Estoque.", "Cadastrar nova Entrada / Saida de Estoque.", "cadastro", "", Url.Content("~/Estoque/Estoque?acao=New"), true, true));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Editar, "Editar Entrada / Saida de Estoque.", "Editar Entrada / Saida de Estoque.", "editar", "", Url.Content("~/Estoque/Estoque?acao=Edit&id_centro_de_custo=" + Model.id_produto_estoque_entrada), true, true));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Excluir, "Excluir Entrada / Saida de Estoque.", "Excluir Entrada / Saida de Estoque.", "excluir", "", "JavaScript:delete_file(" + Model.id_produto_estoque_entrada + ",'Estoque','form')", true, true));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Gravar, "Gravar Entrada / Saida de Estoque.", "Gravar Entrada / Saida de Estoque.", "gravar", "", Url.Content("~/Estoque/Estoque"), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Cancelar, "Cancelar ação.", "Cancelar ação.", "cancelar", "", Url.Content("~/Estoque/Estoque?acao=View&id_produto_estoque_entrada=" + Model.id_produto_estoque_entrada), true, false));
        Buttons.Add(new ProjectMaster.Core.ToolBarButton(ProjectMaster.Core.ToolBarButtonType.Voltar, "Voltar.", "Voltar", "voltar", "", Url.Content("~/Estoque/Index"), true, true));
        read_only = "readonly='readonly'";
    }
}
@Html.Partial("_vuToolBar", Buttons)
<div id="main" class="main-scroll">
    @using (Html.BeginForm("Estoque", "Estoque", FormMethod.Post, new { id = "formulario_estoque", name = "formulario_estoque" }))
    {   
        <fieldset title="Historico">
            <legend>Historico</legend>
            <label class="normal">Id:</label>
            <input type="text" value="@Model.id_produto_estoque_entrada" id="id_produto_estoque_entrada" name="id_produto_estoque_entrada" size="7" maxlength="6" readonly="readonly" />

            <label class="normal">Tipo:</label>
            @if (string.IsNullOrEmpty(read_only))
            { 
                @Html.DropDownListFor(model => model.dm_tipo, ProjectMaster.Bussiness.Domain.GetDomainByTipo(ProjectMaster.Bussiness.Domain.Tipos.TipoEstoque, true));
            }
            else
            { 
                @Html.DropDownListFor(model => model.dm_tipo, ProjectMaster.Bussiness.Domain.GetDomainByTipo(ProjectMaster.Bussiness.Domain.Tipos.TipoEstoque, true), new { disabled = "disabled" });
            }
            @Html.ValidationMessage("dm_tipo", "*")

            <br />

            <label class="normal">Descrição:</label>
            <input type="text" value="@Model.descricao" id="descricao" name="descricao" size="50" maxlength="50" @read_only />
            @Html.ValidationMessage("descricao", "*")

            <label class="normal">Emissão:</label>
            <input type="text" value="@(Model.dta_entrada != DateTime.MinValue ? Model.dta_entrada.ToString("dd/MM/yyyy") : DateTime.Now.ToString("dd/MM/yyyy"))" id="dta_entrada" name="dta_entrada" size="10" maxlength="10" alt="date" readonly="readonly" />
                        
            <label class="normal">Data Documento:</label>
            <input type="text" value="@(Model.dta_doc != DateTime.MinValue ? Model.dta_doc.ToString("dd/MM/yyyy") : "" )" id="dta_doc" name="dta_doc" size="10" maxlength="10" alt="date" readonly="readonly" />
            @Html.ValidationMessage("dta_doc", "*")

            @if(string.IsNullOrEmpty(read_only))
            {
            <script type="text/javascript">
                $("#dta_doc").datepicker({
                    beforeShowDay: $.datepicker.noWeekends,
                    dateFormat: "dd/mm/yy",
                    dayNames: ["Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"],
                    dayNamesShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
                    dayNamesMin: ["D", "S", "T", "Q", "Q", "S", "S"],
                    monthNames: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
                    monthNamesShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"]
                });
            </script>
            }

            <br />

            <label class="normal">Cliente / Fornecedor:</label>

            <input type="text" value="@(Model.ds_marca)" id="ds_marca" name="ds_marca" size="20" maxlength="50" @read_only />
            <input type="hidden" value="@(Model.id_pessoa)" id="id_pessoa" name="id_pessoa" />

            <a href="javascript:procurar_pessoa();">
                <img src="@Url.Content("~/Content/images/buttons/procurar_16x16.png")" id="procurar_pessoa" alt="Procurar Cliente" width="16" height="16" />
            </a>

            <input type="text" value="@(Model.ds_razao_social)" id="ds_razao_social" name="ds_razao_social" size="60" maxlength="100" readonly="readonly" />
            @Html.ValidationMessage("id_pessoa", "*")

            <script type="text/javascript">

                $("#ds_marca").change(function () {

                    $("#ds_razao_social").val("");
                    $("#id_pessoa").val("0");

                    if ($('#ds_marca').val() == '') {
                        $("#ds_razao_social").val("");
                        $("#id_pessoa").val("0");
                        return;
                    }

                    if ($('#id_pessoa').val() != '0')
                        return;

                    LookupPessoa("ds_marca", "ds_razao_social", "id_pessoa");
                });

                function procurar_pessoa() {
                    $("#ds_marca").val("");
                    LookupPessoa("ds_marca", "ds_razao_social", "id_pessoa");
                }

            </script>

            <br />

            <label class="normal">Código do Produto:</label>
            <input type="text" value="@(Model.cprod)" id="cprod" name="cprod" size="10" maxlength="10" @read_only />

            <input type="hidden" value="@Model.id_produto" id="id_produto" name="id_produto" />
            <a href="javascript:procurar_produto();">
                <img src="@Url.Content("~/Content/images/buttons/procurar_16x16.png")" id="procurar_produto" alt="Procurar Produto" width="16" height="16" />
            </a>

            <script type="text/javascript">
                $("#cprod").change(function () {

                    $("#xprod").val("");

                    if ($('#cprod').val() == '') {
                        $("#xprod").val("");
                        return;
                    }

                    if ($('#id_produto').val() != '0')
                        return;

                    LoockProduto("cprod", "xprod", "id_produto", "", "");
                });

                function procurar_produto() {
                    $("#cprod").val("");
                    LoockProduto("cprod", "xprod", "id_produto", "", "");
                }
            </script>

            <input type="text" id="xprod" name="xprod" value="@(Model.xprod)" size="30" maxlength="50" readonly="readonly" />

            @Html.ValidationMessage("id_produto", "*")

            <br />

            <label class="normal">Quandidade:</label>
            <input type="text" value="@Model.quantidade" id="quantidade" name="quantidade" size="5" maxlength="5" alt="decimal9" @read_only />
            @Html.ValidationMessage("quantidade", "*")

        </fieldset>  
        @Html.ValidationSummary()
    }
</div>

<div id="dialog-confirm" style="display: none" title="Entrada / Saida de Estoque">
<p>
<span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
Excluir Entrada / Saida de Estoque?
</p>
</div>